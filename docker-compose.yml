version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: images_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d images_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  app:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - images:/app/images
      - logs:/app/logs
      - backups:/app/backups
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:password@db:5432/images_db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:  # ✅ ИСПРАВЛЕНА ОПЕЧАТКА
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - images:/app/images:ro
    depends_on:
      - app
    restart: unless-stopped

volumes:
  images:
  logs:
  backups:
  db_data: